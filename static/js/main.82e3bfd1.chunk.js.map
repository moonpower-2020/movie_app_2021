{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genere","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAqCeA,MA9Bf,YAA2D,EAA3CC,GAA4C,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAE9C,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,iBAAd,SACCD,EAAOI,KAAI,SAACC,EAAQC,GAAT,OACR,oBAAgBL,UAAU,QAA1B,SAAmCI,GAA1BC,QAGb,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAG,KAAhD,gBC8DDC,G,kNAzEbC,MAAQ,CACJC,WAAW,EACXC,OAAQ,I,EAMZC,U,sBAAY,8BAAAC,EAAA,sEAM4BC,IAAMC,IAAI,4DANtC,gBAMUJ,EANV,EAMHK,KAAOA,KAAML,OACpB,EAAKM,SAAS,CAACN,SAAQD,WAAW,IAPxB,2C,uDAYZ,WAYEQ,KAAKN,c,oBAGP,WAAU,IAAD,EACqBM,KAAKT,MAA1BC,EADA,EACAA,UAAWC,EADX,EACWA,OAGlB,OACE,yBAASV,UAAU,YAAnB,SACGS,EAEG,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAKA,qBAAKA,UAAU,SAAf,SAEIU,EAAOP,KAAI,SAAAe,GAAK,OAGhB,aAFA,CAEC,EAAD,CACQxB,GAAIwB,EAAMxB,GACVC,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAMC,mBACdpB,OAAQmB,EAAMnB,QANVmB,EAAMxB,e,GAvDlB0B,IAAMC,YCFxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.82e3bfd1.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\n\n// component가 state가 필요 없는 경우, class component가 필요없는 경우 state가 필요\n\nfunction Movie({id, year, title, summary, poster, genres}) {\n\n    return (\n        <div className=\"movie\">\n            <img src={poster} alt={title} title={title} />\n            <div className=\"movie__data\">\n                <h3 className=\"movie__title\">{title}</h3>\n                <h5 className=\"movie__year\">{year}</h5>\n                <ul className=\"movie__generes\">\n                {genres.map((genere, index) => (\n                    <li key={index} className=\"genre\">{genere}</li>\n                ))}\n                </ul>\n                <p className=\"movie__summary\">{summary.slice(1, 140)}...</p>\n                \n            </div>\n        </div>\n\n    );\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default Movie;","import React from 'react';\nimport axios from 'axios';\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\n// movie compoent 구성하기 \n// ES6  코스 동영상을 보자\n// npm install axios (fech보다 좋아)\nclass App extends React.Component {\n  state = {\n      isLoading: true,\n      movies: []\n\n  }\n\n  // 비동기 async + await\n  // api 통해서 데이터를 얻기위해서 조금의 시간이 걸린다는 걸 알려줘야 함.\n  getMovies = async () => {\n    // normal javascript\n    //const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\")\n    //console.log(movies.data.data.movies)\n \n    //ㄴ>> es6 version \n    const {data: {data:{movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\")\n    this.setState({movies, isLoading: false});\n    //console.log(movies)\n\n  }\n \n  componentDidMount(){\n    //fetch data \n    //API로 부터 data fetching 완료되면 \n    //데이터를 Render ~ \n    \n    /*setTimeout(() => {\n      this.setState({ isLoading: false });\n    }, 6000)\n    */\n\n    //axios.get(\"https://yts-proxy.now.sh/list_movies.json\")\n    //const movies = axios.get(\"https://yts-proxy.now.sh/list_movies.json\")\n    this.getMovies();\n  }\n\n  render() {\n    const {isLoading, movies} = this.state;\n\n    //return <div>{isLoading ? \"Loading....\": \"We are ready\"}</div>;\n    return (\n      <section className=\"container\">\n        {isLoading \n          ? (\n            <div className=\"loader\">\n              <span className=\"loader__text\">Loading...</span>\n            </div>\n          )\n          : \n            (\n              <div className=\"movies\">\n                {\n                  movies.map(movie => (\n                  //console.log(movie);\n                  //return <Movie key={movie.id} id={movie.id} year={movie.year} title={movie.title} summary={movie.summary} poster={movie.medium_cover_image} />\n                  <Movie key={movie.id} \n                          id={movie.id} \n                          year={movie.year} \n                          title={movie.title}\n                          summary={movie.summary} \n                          poster={movie.medium_cover_image}\n                          genres={movie.genres}\n                  />\n                  ))\n                }\n              </div>\n\n            )\n        }\n    </section>\n    );\n  }\n\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}